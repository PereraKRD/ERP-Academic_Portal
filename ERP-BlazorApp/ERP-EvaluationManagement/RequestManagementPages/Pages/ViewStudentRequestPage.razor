@using ERP_EvaluationManagement.DTOs.Responses
@using System.Net.Http.Json
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

@if (_studentRequest != null)
{
    <MudPaper Elevation="2" Class="email-paper">
        <div class="email-header">
            <div class="sender-info">
                <span class="sender-name">From: @_studentRequest.SenderName</span>
                <span class="sender-email">(@_studentRequest.SenderRegistrationNum)</span>
            </div>
            <div class="subject-line">
                <span>Subject: Student Request </span><br />
                <span>Header: @_studentRequest.Header </span>
            </div>
        </div>
        <div class="email-content">
            <p>@_studentRequest.Message</p>
        </div>
        <div class="reply-button">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="() => ViewModuleInformation(_studentRequest.SenderId)">
                Reply
            </MudButton>
        </div>
    </MudPaper>
}
else
{
    <p>Module offering information not found.</p>
}

<style>
    .email-paper {
        margin-bottom: 20px;
    }

    .email-header {
        border-bottom: 1px solid #ccc;
        padding-bottom: 10px;
        margin-bottom: 10px;
    }

    .sender-info {
        font-weight: bold;
        margin-bottom: 5px;
    }

    .sender-name {
        margin-right: 10px;
    }

    .subject-line {
        font-style: italic;
    }

    .email-content {
        margin-bottom: 15px;
    }

    .reply-button {
        text-align: center;
    }
</style>

@code {

    [Parameter]
    public Guid RequestId { get; set; }
    [Parameter]
    public Guid SenderId { get; set; }

    private HttpClient Http = new HttpClient();

    private GetStudentMessagesResponse? _studentRequest;

    protected override async Task OnInitializedAsync()
    {
        await LoadModuleOfferingInfoAsync(RequestId);
    }

    private async Task LoadModuleOfferingInfoAsync(Guid requestId)
    {
        try
        {
            _studentRequest = await Http.GetFromJsonAsync<GetStudentMessagesResponse>($"https://localhost:7256/api/StudentRequest/{requestId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while loading module offering: {ex.Message}");
        }
    }

    private void ViewModuleInformation(Guid senderId)
    {
        NavigationManager.NavigateTo($"/RequestManagementTabs/RequestCreate/{senderId}");
    }

}
