@using ERP_EvaluationManagement.DTOs.Responses
@using System.Net.Http.Json;
@inject NavigationManager NavigationManager

<MudContainer Class="result-container">
    <h1 class="result-header pb-3" style="color:blue">Batches</h1>
    <MudGrid>
        <MudItem xs="9">
            <MudCard Outlined="true">
                <div class="mt-4">
                    <MudList Clickable="true" Dense="false" DisableGutters="false">
                        @foreach (var batch in _batches)
                        {
                            <MudListItem Text="@batch.BatchName" @onclick="() => ViewModuleInformation(batch.BatchId)" Icon="@Icons.Material.Filled.FormatListBulleted" IconColor="Color.Primary" />
                            @* <div>
                        <button @onclick="() => ViewModuleInformation(moduleOffering.ModuleOfferingId)">
                        @moduleOffering.Name
                        </button>
                        </div> *@
                        }
                    </MudList>
                </div>
            </MudCard>
        </MudItem>
        <MudItem xs="2" Class="m-0 p-0">
            <MudDatePicker PickerVariant="PickerVariant.Static" Rounded="true" Elevation="12" Date="DateTime.Today" />
        </MudItem>
    </MudGrid>
</MudContainer>

@code {

    private HttpClient Http = new HttpClient();
    private List<GetBatchResponse> _batches = new List<GetBatchResponse>();

    protected override async Task OnInitializedAsync()
    {
        await LoadModulesAsync();
    }

    private async Task LoadModulesAsync()
    {
        _batches = await Http.GetFromJsonAsync<List<GetBatchResponse>>($"https://localhost:7007/api/Batch");
    }

    private void ViewModuleInformation(Guid batchId)
    {
        NavigationManager.NavigateTo($"/MentoringManagementPage/{batchId}");
    }
}

<link rel="stylesheet" href="styles.css" />