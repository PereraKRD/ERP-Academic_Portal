@using ERP_EvaluationManagement.DTOs.Responses
@using System.Net.Http.Json


<h1 class="result-header pb-3" style="color:black; text-align:center">Evaluation Information</h1>

<MudPaper Class="pl-5 pt-5" Elevation="4" Style="@($"background:{Colors.LightBlue.Lighten5};")">
    <MudList>
        <h2 style="font-weight:bolder">
            Module
        </h2>
        <MudListItem Icon="@Icons.Material.Filled.Circle" IconSize="Size.Small">
            @module.ModuleName
        </MudListItem>
        <h2 style="font-weight:bolder">
            Module Code
        </h2>
        <MudListItem Icon="@Icons.Material.Filled.Circle" IconSize="Size.Small">
            @module.ModuleCode
        </MudListItem>
        <h2 style="font-weight:bolder">
            Evaluation Name
        </h2>
        <MudListItem Icon="@Icons.Material.Filled.Circle" IconSize="Size.Small">
            @evaluation.EvaluationName
        </MudListItem>
        <h2 style="font-weight:bolder">
            Evaluation Type
        </h2>
        <MudListItem Icon="@Icons.Material.Filled.Circle" IconSize="Size.Small">
            @evaluationType
        </MudListItem>
        <h2 style="font-weight:bolder">
            Marks
        </h2>
        <MudListItem Icon="@Icons.Material.Filled.Circle" IconSize="Size.Small">
            @evaluation.EvaluationMarks
        </MudListItem>
        <h2 style="font-weight:bolder">
            Final Marks
        </h2>
        <MudListItem Icon="@Icons.Material.Filled.Circle" IconSize="Size.Small">
            @evaluation.EvaluationFinalMarks
        </MudListItem>
    </MudList>
</MudPaper>


@code {
    [Parameter]
    public Guid ModuleOfferingId { get; set; }
    [Parameter]
    public Guid EvaluationId { get; set; }

    private HttpClient Http = new HttpClient();

    private GetEvaluationDetailsResponse evaluation = new();
    private GetModuleOfferingDetailsResponse module = new();
    private string evaluationType;

    protected override async Task OnInitializedAsync()
    {
        evaluation = await Http.GetFromJsonAsync<GetEvaluationDetailsResponse>($"https://localhost:7007/api/Evaluation/{EvaluationId}/evaluation");
        module = await Http.GetFromJsonAsync<GetModuleOfferingDetailsResponse>($"https://localhost:7007/api/ModuleOffering/{ModuleOfferingId}");
        evaluationType = GetEvaluationType(evaluation.EvaluationType);
    }

    public string GetEvaluationType(int type)
    {
        switch (type)
        {
            case 1:
                return "Inclass";
            case 2:
                return "Quiz";
            case 3:
                return "Assignment";
            case 4:
                return "TakeHome";
            case 5:
                return "Other";
            default:
                return "Unknown";
        }
    }
}

